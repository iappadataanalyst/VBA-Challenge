Dim ws As Worksheet

Sub TotalSotckVol()

Dim TickerName As String
Dim TotalSotckVol As Double
TotalSotckVol = 0

Dim Ticker_Table_Row As Integer
Ticker_Table_Row = 2

Ticker_last_row = Cells(Rows.Count, 1).End(xlUp).Row

        ' Loop through all Tickers
        For i = 2 To Ticker_last_row
    
            ' Check the values
            If Cells(i + 1, 1).Value <> Cells(i, 1).Value Then
    
                ' Set the Ticker name
                TickerName = Cells(i, 1).Value
        
                ' Add to the TotalSotckVol
                TotalSotckVol = TotalSotckVol + Cells(i, 7).Value
        
                ' Write back the TickerName in the Summary Table
                ws.Range("I" & Ticker_Table_Row).Value = TickerName
        
                ' Write back the TotalSotckVol in the Summary Table
                ws.Range("L" & Ticker_Table_Row).Value = TotalSotckVol
        
                ' Add one to the summary table row
                Ticker_Table_Row = Ticker_Table_Row + 1
        
                ' Reset the TotalSotckVol Total
                TotalSotckVol = 0
    
                ' If the cell immediately following a row has the same TickerName..
            Else
                ' Add to the TotalSotckVol
                TotalSotckVol = TotalSotckVol + Cells(i, 7).Value
    
        End If

    Next i

End Sub

Sub YearlyChangeAndPercentage()

Dim TickerName As String
Dim Ticker_row As Integer
Ticker_row = 2
    
Dim PercentChange As Double
Dim TotalStockVolume As Long
Dim YearlyChange As Double
Dim Ticker_last_row As Long
Dim DailyChange As Double
Dim EndValue As Double
Dim StartValue As Double

DailyChange = 0
PercentChange = 0
TotalStockVolume = 0
YearlyChange = 0
Ticker_last_row = Cells(Rows.Count, 1).End(xlUp).Row
EndValue = 0

StartValue = Cells(2, 3).Value

    ' Loop through all Ticker
    For i = 2 To Ticker_last_row
        
        'set the start value for the first Ticker
        
        
        ' Check if we are still within the same Ticker, if it is not...
        If Cells(i + 1, 1).Value <> Cells(i, 1).Value Then
            EndValue = Cells(i, 6).Value
            ' Set the Ticker name
            TickerName = Cells(i, 1).Value
            YearlyChange = EndValue - StartValue
                ' PercentChange = (YearlyChange / StartValue) * 100 ; Throws error when "/0" occurs
                If (StartValue <> 0) Then
                    'PercentChange = (YearlyChange * 100) / StartValue
                    PercentChange = YearlyChange / StartValue
                    'need to change number format to %, to include the % symbol and calulate final %
                    
                Else
                    PercentChange = 0
                End If
            ' Print the TickerName in the Summary Table
            ws.Range("I" & Ticker_row).Value = TickerName
    
            ' Print the YearlyChange to the Summary Table
            ws.Range("J" & Ticker_row).Value = YearlyChange
            'similarly, PercentChange and TotalStockVolume
            ws.Range("K" & Ticker_row).Value = PercentChange
            'ws.Columns("K").NumberFormat = "0.00%" 'moved to additional formating to enhance speed
    
            ' Add one to the ticker_row
            Ticker_row = Ticker_row + 1
            
            'Restart the start value for the next Ticker
            StartValue = Cells(i + 1, 3).Value
    
            ' If the cell immediately following a row is the same Ticker...
            ' Add to the YearlyChange
        
        End If

    Next i

End Sub


Sub GreatestIncrease()

' Set an initial variable for holding the TickerName
Dim TickerName As String

' Set an initial variable for holding the total per Ticker
Dim GreatestIncrease As Double
GreatestIncrease = 0

Dim Ticker_Table_Row As Integer
Ticker_Table_Row = 2
Ticker_last_row = Cells(Rows.Count, 9).End(xlUp).Row

    ' Loop through all values to check the increase/decrease
    For i = 2 To Ticker_last_row

        ' Check the GreatestIncrease
        If (Cells(i, 11).Value > GreatestIncrease) Then
        
            TickerName = Cells(i, 9).Value
            GreatestIncrease = Cells(i, 11).Value
            
            ' Print the Ticker in the Summary Table
            ws.Range("P" & 2).Value = TickerName
            ws.Range("Q" & 2).Value = GreatestIncrease
            ws.Range("Q" & 2).NumberFormat = "0.00\%"  'moved to additional formating to enhance speed
        
        End If

    Next i

End Sub

Sub GreatestDecrease()

' Set an initial variable for holding the Ticker name
Dim TickerName As String
Dim GreatestDecrease As Double
GreatestDecrease = 0

Dim Ticker_Table_Row As Integer
Ticker_Table_Row = 2
Ticker_last_row = Cells(Rows.Count, 1).End(xlUp).Row

    
    ' Loop through all Tickers
    For i = 2 To Ticker_last_row

        ' Check for the GreatestDecrease
        If (Cells(i, 11).Value < GreatestDecrease) Then
            
            ' Set the Ticker name
            Ticker = Cells(i, 9).Value
            ' Add to the Ticker Total
            GreatestDecrease = Cells(i, 11).Value
            
            ' Print the Ticker in the Summary Table
            ws.Range("P" & 3).Value = Ticker
            ws.Range("Q" & 3).Value = GreatestDecrease
            ws.Range("Q" & 3).NumberFormat = "0.00\%" 'moved to additional formating to enhance speed
          
        End If

    Next i

End Sub


Sub GreatestTotalVolume()

' Set an initial variable for holding the TickerName
Dim TickerName As String

' Set an initial variable for holding the total volume
Dim GreatestTotalVolume As Double
GreatestTotalVolume = 0

Dim Ticker_Table_Row As Integer
Ticker_Table_Row = 2
Ticker_last_row = Cells(Rows.Count, 9).End(xlUp).Row

    ' Loop through all values to check the increase/decrease
    For i = 2 To Ticker_last_row

        ' Check if we are still within the same Ticker, if it is not...
        If (Cells(i, 12).Value > GreatestTotalVolume) Then
        
            TickerName = Cells(i, 9).Value
            GreatestTotalVolume = Cells(i, 12).Value
            ' Print the output to the Summary Table
            ws.Range("P" & 4).Value = TickerName
            ws.Range("Q" & 4).Value = GreatestTotalVolume
        End If

    Next i

End Sub

Sub MasterCalculateStockData()
'AnalyzeStockData button will call all the function to calculate all required values

'Build The Table for the data output
    ws.Range("I" & 1).Value = "TickerName"
    ws.Range("J" & 1).Value = "YearlyChange"
    ws.Range("K" & 1).Value = "PercentChange"
    ws.Range("L" & 1).Value = "TotalStockVolume"
    ws.Range("P" & 1).Value = "TickerName"
    ws.Range("Q" & 1).Value = "Value"
    ws.Range("O" & 2).Value = "Greatest%Increase"
    ws.Range("O" & 3).Value = "Greatest%Decrease"
    ws.Range("O" & 4).Value = "GreatestTotalVolume"

'Call the functions to analyze the data
    Call YearlyChangeAndPercentage
    Call TotalSotckVol
    Call GreatestIncrease
    Call GreatestDecrease
    Call GreatestTotalVolume

End Sub

Sub AnalyzeAllSheets()
'The toal run time for this entire given workbook is about 5 seconds only in my laptop, while the formating is done after the analyses as given below.
'Otherwise the toal run time was about 45 minutes.

    'Dim ws As Worksheet
    Application.ScreenUpdating = False
    For Each ws In Worksheets
        ws.Select
        Call MasterCalculateStockData
        Call AdditionalFormating
    Next
    Application.ScreenUpdating = True
End Sub

Sub AdditionalFormating()

'will throw errror if run separately as the ws variable is outside, to be run from "AnalyzeAllSheets" only

ws.Columns("K").NumberFormat = "0.00%"
'ws.Range("Q" & 2).NumberFormat = "0.00\%"
'ws.Range("Q" & 3).NumberFormat = "0.00\%"

'Dim ws As Worksheet

Ticker_last_row = Cells(Rows.Count, 9).End(xlUp).Row
Ticker_row = 2
    
    ' Loop through all Tickers
    For i = 2 To Ticker_last_row
        'Cells(i, 11).NumberFormat = "0.00%"
    
        If (Cells(i, 10).Value > 0) Then
             ws.Cells(i, 10).Interior.Color = vbGreen
        Else
            'If (Cells(i, 10).Value < 0) Then
            ws.Cells(i, 10).Interior.Color = vbRed
        
        End If
    Next i
                
End Sub
